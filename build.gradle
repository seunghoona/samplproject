buildscript {
    ext {
        // profile = (!project.hasProperty('profile') || !profile) ? 'local' : profile
        projectBuildVersion = "0.0.1"
        queryDslVersion     = "5.0.0"
        logbackVersion      = "0.1.5"
        springVersion       = "2.6.7"
        gsonVersion         = "2.9.0"
    }
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version "${springVersion}"
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.sample'
version = "${projectBuildVersion}"
sourceCompatibility = JavaVersion.VERSION_11


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    // SPRING
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // LOMBOK
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // DB
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'

    //querydsl 추가 (라이브러리 dependency 추가)
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
    implementation "com.querydsl:querydsl-core:${queryDslVersion}"

    annotationProcessor group: 'com.querydsl', name: 'querydsl-apt', version: queryDslVersion
    annotationProcessor group: 'com.querydsl', name: 'querydsl-apt', version: queryDslVersion, classifier: 'jpa'
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"

    // JSON PARSER
    implementation "com.google.code.gson:gson:${gsonVersion}"

    // 테스트 부분
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.security:spring-security-test"

    // LOG BACK
    implementation "ch.qos.logback.contrib:logback-jackson:${logbackVersion}"
    implementation "ch.qos.logback.contrib:logback-json-classic:${logbackVersion}"

}

project.tasks.named("processResources", Copy.class) {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}


/*** TASK ***/

tasks.named('test') {
    useJUnitPlatform()
}

bootJar {
    archiveBaseName='msmartOnlineUser'
    archiveFileName='msmartOnlineUser.jar'
}

